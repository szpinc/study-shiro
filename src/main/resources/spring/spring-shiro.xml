<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 配置securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="ehCacheManager"></property>
        <!-- 配置认证器-->
        <property name="authenticator" ref="authenticator"></property>
    </bean>
    <!-- 配置缓存管理器 -->
    <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>


    <bean class="org.apache.shiro.authc.pam.ModularRealmAuthenticator" id="authenticator">
        <property name="realms">
            <list>
                <ref bean="shiroRealm"></ref>
            </list>
        </property>
    </bean>

    <bean id="shiroRealm" class="org.szpinc.study.shiro.spring.realm.ShiroRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
                <property name="hashIterations" value="1024"/>
            </bean>
        </property>
    </bean>

    <!-- 配置LifecycleBeanPostProcessor.可以自定义的来调用配置在Spring IOC容器中 Shiro Bean 的生命周期的方法 -->
    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor"></bean>


    <!-- 启用IOC容器中使用shiro的注解，但必须在配置了LifecycleBeanPostProcessor之后调用 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"></bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <!--<property name="securityManager" value="securityManager"/>-->
    </bean>
    <!--
     配置Shiro Filter
        id必须和web.xml中配置的DelegatingFilterProxy的filter-name一致
     -->
    <bean class="org.apache.shiro.spring.web.ShiroFilterFactoryBean" id="shiroFilter">
        <property name="securityManager" ref="securityManager"></property>
        <property name="loginUrl" value="/login.html"></property>
        <property name="successUrl" value="/index.html"></property>
        <property name="unauthorizedUrl" value="/unauthorized.html"></property>

        <!--
            配置哪些页面需要受保护以及访问这些页面需要保护
            1. anon : 可以被匿名访问
            2. authc : 必须认证后才能访问
         -->
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /user/login = anon
                /user/registry = anon
                /registry.html = anon
                /** = authc
            </value>
        </property>
    </bean>


</beans>